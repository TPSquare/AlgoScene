{
    "NAME": "Mảng cộng dồn (Tổng tiền tố)",
    "list": {
        "sumArray": {
            "name": "Tính tổng của đoạn\n(mảng 1 chiều)",
            "informations": {
                "definition": "Mảng cộng dồn là mảng giá trị mà phần tử tại một vị trí bất kì sẽ lưu tổng của tất cả các phần tử của mảng gốc trước vị trí đó (tính cả vị trí đó).",
                "idea": "Tính toán trước tổng của các phần tử từ đầu mảng đến mỗi vị trí, để sau đó có thể nhanh chóng tính tổng của bất kì đoạn con nào trong mảng mà không cần phải tính lại từng phần tử.",
                "advantage": [
                    "Tính toán nhanh",
                    "Đơn giản hóa các phép tính",
                    "Đơn giản, dễ hiểu và dễ cài đặt"
                ],
                "disadvantage": [
                    "Sử dụng thêm bộ nhớ",
                    "Không phù hợp khi mảng gốc cập nhật liên tục",
                    "Không thể mở rộng để tính tích, giá trị nhỏ nhất, giá trị lớn nhất,..."
                ]
            },
            "comments": {
                "cpp": [
                    "Khởi tạo kích thước tối đa của mảng đầu vào.",
                    "Khai báo mảng {prefixSum} để lưu trữ tổng tích lũy của các phần tử từ mảng gốc.",
                    "",
                    "Định nghĩa hàm xây dựng mảng {prefixSum} từ mảng gốc {array}. {size} là số lượng phần tử của mảng {array}.",
                    "Vòng lặp từ chỉ số {1} đến {size} (chỉ số bắt đầu từ {1} vì chỉ số {0} của {prefixSum} luôn là {0}).",
                    "Tính tổng tích lũy cho chỉ số {i} trong {prefixSum}. Tổng tại chỉ số {i} bằng tổng tích lũy của chỉ số {iminus1} cộng với phần tử tương ứng trong mảng gốc {array}.",
                    "",
                    "",
                    "Định nghĩa hàm tính tổng của các phần tử từ chỉ số {left} đến chỉ số {right} trong mảng gốc.",
                    "Tính tổng của các phần tử từ chỉ số {left} đến {right} bằng cách trừ tổng tích lũy tại {left} khỏi tổng tích lũy tại {rightplus1}."
                ],
                "js": [
                    "{{{cpp,0}}}",
                    "Khai báo mảng {prefixSumjs} để lưu trữ tổng tích lũy của các phần tử từ mảng gốc.",
                    "Khởi tạo giá trị đầu tiên của mảng {prefixSumjs} là {0}, vì không có phần tử nào trước phần tử đầu tiên.",
                    "",
                    "Định nghĩa hàm xây dựng mảng {prefixSumjs} từ mảng gốc {array}.",
                    "Vòng lặp từ chỉ số {1} đến {arrayLength} (chỉ số bắt đầu từ {1} vì chỉ số {0} của {prefixSumjs} luôn là {0}).",
                    "Tính tổng tích lũy cho chỉ số {i} trong {prefixSumjs}. Tổng tại chỉ số {i} bằng tổng tích lũy của chỉ số {iminus1} cộng với phần tử tương ứng trong mảng gốc {array}.",
                    "",
                    "",
                    "Định nghĩa hàm tính tổng của các phần tử từ chỉ số {left} đến chỉ số {right} trong mảng gốc. Tính tổng của các phần tử từ chỉ số {left} đến {right} bằng cách trừ tổng tích lũy tại {left} khỏi tổng tích lũy tại {rightplus1}."
                ]
            }
        },
        "sumMatrix": {
            "name": "Tính tổng của vùng\n(mảng 2 chiều)",
            "informations": {
                "definition": "Mảng cộng dồn là mảng giá trị mà phần tử tại một vị trí bất kì sẽ lưu tổng của tất cả các phần tử của mảng gốc trước vị trí đó (tính cả vị trí đó).",
                "idea": "Tính toán trước tổng của các phần tử từ đầu mảng đến mỗi vị trí, để sau đó có thể nhanh chóng tính tổng của bất kì đoạn con nào trong mảng mà không cần phải tính lại từng phần tử.",
                "advantage": [
                    "Tính toán nhanh",
                    "Đơn giản hóa các phép tính",
                    "Đơn giản, dễ hiểu và dễ cài đặt"
                ],
                "disadvantage": [
                    "Sử dụng thêm bộ nhớ",
                    "Không phù hợp khi mảng gốc cập nhật liên tục",
                    "Không thể mở rộng để tính tích, giá trị nhỏ nhất, giá trị lớn nhất,..."
                ]
            },
            "comments": {
                "cpp": [
                    "Khởi tạo số hàng tối đa và số cột tối đa của mảng đầu vào.",
                    "Khai báo mảng {prefixSum} để lưu trữ tổng tích lũy của các phần tử từ mảng gốc.",
                    "",
                    "Định nghĩa hàm xây dựng mảng {prefixSum} từ mảng gốc {array} với số lượng hàng {rows} và số lượng cột {cols}.",
                    "Vòng lặp qua từng hàng của mảng {prefixSum}, bắt đầu từ chỉ số {1} đến {rows}.",
                    "Vòng lặp qua từng cột của mảng {prefixSum}, bắt đầu từ chỉ số {1} đến {cols}.",
                    "Tính tổng tích lũy cho ô tại chỉ số ({i}, {j}) trong mảng {prefixSum}.",
                    "Lấy phần tử hiện tại của mảng gốc tại chỉ số ({iminus1}, {jminus1}) {:+:}",
                    "{:+:} cộng tổng tích lũy của hàng phía trên tại chỉ số ({iminus1}, {j}) {:+:}",
                    "{:+:} cộng tổng tích lũy của cột bên trái tại chỉ số ({i}, {jminus1}) {:+:}",
                    "{:+:} trừ tổng tích lũy của ô chéo trên-trái, do bị cộng hai lần.",
                    "",
                    "",
                    "Định nghĩa hàm tính tổng của vùng từ ({x}, {y}) đến ({xx}, {yy}) trong mảng gốc.",
                    "Lấy tổng tích lũy của vùng từ ({0}, {0}) đến ({xx}, {yy}) {:+:}",
                    "{:+:} trừ tổng tích lũy của vùng từ ({0}, {0}) đến ({xminus1}, {yy}) {:+:}",
                    "{:+:} trừ tổng tích lũy của vùng từ ({0}, {0}) đến ({xx}, {yminus1}) {:+:}",
                    "{:+:} cộng tổng tích lũy của vùng từ ({0}, {0}) đến ({xminus1}, {yminus1}), do bị trừ hai lần."
                ]
            }
        },
        "updateArray": {
            "name": "Cập nhật mảng 1 chiều",
            "informations": {
                "idea": [
                    "Sử dụng mảng cộng dồn để lưu trữ các thay đổi tại các vị trí tương ứng",
                    "Giá trị mới của các phần tử trong mảng gốc sẽ được tính bằng cách cộng thêm giá trị tại vị trí tương ứng của chúng trong mảng cộng dồn"
                ],
                "advantage": [
                    "Hiệu quả về thời gian",
                    "Đơn giản và dễ hiểu",
                    "Tối ưu hóa bộ nhớ"
                ],
                "disadvantage": [
                    "Sử dụng thêm bộ nhớ",
                    "Không phù hợp khi dùng cho một phép cập nhật"
                ]
            },
            "comments": {
                "cpp": [
                    "Định nghĩa hàm cập nhật mảng {array} dựa trên các phép toán được mô tả trong {operations}.",
                    "Khởi tạo mảng {prefixSum} để theo dõi các thay đổi để tính tổng cập nhật cho mảng {array}.",
                    "Vòng lặp để xử lý từng phép toán từ cuối mảng {operations} đến đầu mảng (đếm ngược {numOps}).",
                    "{left} là chỉ số bên trái của vùng cập nhật trong phép toán hiện tại.",
                    "{right} là chỉ số bên phải của vùng cập nhật trong phép toán hiện tại.",
                    "{value} là giá trị cần cộng thêm vào các phần tử trong vùng từ {left} đến {right}.",
                    "Tăng giá trị tại chỉ số {left} trong mảng {prefixSum} để bắt đầu cập nhật từ chỉ số này.",
                    "Giảm giá trị tại chỉ số {rightplus1} trong mảng {prefixSum} để kết thúc cập nhật sau chỉ số {right}.",
                    "",
                    "Cập nhật phần tử đầu tiên của mảng {array} bằng giá trị tại {prefixSumat0}.",
                    "Duyệt qua từng chỉ số từ {1} đến {sizeminus1} của mảng {array}.",
                    "Cập nhật mảng {prefixSum} để tính tổng tích lũy của các thay đổi từ các phép toán trước đó.",
                    "Cập nhật giá trị tại chỉ số {i} trong mảng {array} bằng tổng tích lũy hiện tại trong {prefixSum}."
                ]
            }
        },
        "updateMatrix": {
            "name": "Cập nhật mảng 2 chiều",
            "informations": {
                "idea": [
                    "Sử dụng mảng cộng dồn để lưu trữ các thay đổi tại các vị trí tương ứng",
                    "Giá trị mới của các phần tử trong mảng gốc sẽ được tính bằng cách cộng thêm giá trị tại vị trí tương ứng của chúng trong mảng cộng dồn"
                ],
                "advantage": [
                    "Hiệu quả về thời gian",
                    "Đơn giản và dễ hiểu",
                    "Tối ưu hóa bộ nhớ"
                ],
                "disadvantage": [
                    "Sử dụng thêm bộ nhớ",
                    "Không phù hợp khi dùng cho một phép cập nhật"
                ]
            },
            "comments": {
                "cpp": [
                    "Khởi tạo số cột tối đa của mảng đầu vào.",
                    "",
                    "Định nghĩa hàm cập nhật mảng {array} dựa trên các phép toán được mô tả trong {operations}.",
                    "Tăng kích thước của {rows} và {cols} lên {2} để tạo không gian làm việc cho mảng {prefixSum}.",
                    "Khởi tạo mảng {prefixSum} để theo dõi các thay đổi để tính tổng cập nhật cho mảng {array}.",
                    "Vòng lặp qua từng hàng của mảng {prefixSum}, bắt đầu từ chỉ số {1} đến {rowsminus1}.",
                    "Vòng lặp qua từng cột của mảng {prefixSum} từ chỉ số {1} đến {colsminus1} và giá trị tại chỉ số ({i}, {j}) của mảng {prefixSum} bằng {0}.",
                    "Vòng lặp để xử lý từng phép toán từ cuối mảng {operations} đến đầu mảng (đếm ngược {numOps}).",
                    "{x} là chỉ số hàng bắt đầu của vùng cập nhật trong phép toán hiện tại, tăng thêm {1} để phù hợp với mảng {prefixSum}.",
                    "{y} là chỉ số cột bắt đầu của vùng cập nhật trong phép toán hiện tại, tăng thêm {1} để phù hợp với mảng {prefixSum}.",
                    "{xx} là chỉ số hàng kết thúc của vùng cập nhật trong phép toán hiện tại, tăng thêm {2} để phù hợp với mảng {prefixSum}.",
                    "{yy} là chỉ số cột kết thúc của vùng cập nhật trong phép toán hiện tại, tăng thêm {2} để phù hợp với mảng {prefixSum}.",
                    "{value} là giá trị cần cộng thêm vào các phần tử trong vùng từ ({x}, {y}) đến ({xx}, {yy}).",
                    "Tăng giá trị tại chỉ số ({x}, {y}) trong mảng {prefixSum} để bắt đầu cập nhật từ chỉ số này.",
                    "Giảm giá trị tại chỉ số ({xx}, {y}) trong mảng {prefixSum} để kết thúc cập nhật sau chỉ số {xx}.",
                    "Giảm giá trị tại chỉ số ({x}, {yy}) trong mảng {prefixSum} để kết thúc cập nhật sau chỉ số {yy}.",
                    "Tăng giá trị tại chỉ số ({xx}, {yy}) trong mảng {prefixSum} để bù đắp cho việc cập nhật hai lần trước đó.",
                    "",
                    "Giảm kích thước của {rows} và {cols} lại {1} để phù hợp với công việc tiếp theo.",
                    "Vòng lặp qua từng hàng của mảng {prefixSum}, bắt đầu từ chỉ số {1} đến {rowsminus1}.",
                    "Vòng lặp qua từng cột của mảng {prefixSum}, bắt đầu từ chỉ số {1} đến {colsminus1}.",
                    "Cập nhật giá trị tại chỉ số ({i}, {j}) của mảng {prefixSum} bằng tổng tích lũy của các giá trị trước đó.",
                    "Cập nhật giá trị tại chỉ số ({iminus1}, {jminus1}) của mảng {array} bằng giá trị tương ứng trong mảng {prefixSum}."
                ]
            }
        }
    },
    "complexity": {
        "build": "Xây dựng",
        "getSum": "Tính tổng",
        "updateArray": "Cập nhật"
    }
}