import fs from 'fs';

const data = JSON.stringify({
    prolangs: 'js,cpp',
    codes: {
        dfs: {
            cpp: {
                main: [
                    '<span class="mtk5">// include: vector</span>',
                    '<span class="mtk5">// namespace: std</span>',
                    '<span>&empty-line;</span>',
                    '<span class="mtk6">void</span> <span class="mtk16">dfs</span><span class="bracket-highlighting-0">(</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span><span class="mtk6">&amp;</span> <span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">x</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">y</span><span class="mtk1">,</span> <span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">pair</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span><span class="mtk6">&amp;</span> <span class="mtk10">path</span><span class="mtk1">,</span> <span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">bool</span><span class="mtk1">&gt;&gt;</span><span class="mtk6">&amp;</span> <span class="mtk10">visited</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endY</span><span class="mtk1">,</span> <span class="mtk6">bool&amp;</span> <span class="mtk10">found</span><span class="bracket-highlighting-0">)</span> <span class="bracket-highlighting-0">{</span>',
                    '&tab1;<span class="mtk18">if</span> <span class="bracket-highlighting-0">(</span><span class="mtk10">found</span><span class="bracket-highlighting-0">)</span> <span class="mtk18">return</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">rows</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">cols</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">directions</span><span class="bracket-highlighting-1">[</span><span class="mtk7">4</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-1">[</span><span class="mtk7">2</span><span class="bracket-highlighting-1">]</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">{</span> <span class="bracket-highlighting-2">{</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk3">-</span><span class="mtk7">1</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">1</span> <span class="bracket-highlighting-2">}</span> <span class="bracket-highlighting-1">}</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk10">visited</span><span class="bracket-highlighting-1">[</span><span class="mtk10">x</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-1">[</span><span class="mtk10">y</span><span class="bracket-highlighting-1">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">push_back</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-2">{</span> <span class="mtk1">x,</span> <span class="mtk10">y</span> <span class="bracket-highlighting-2">}</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">for</span> <span class="bracket-highlighting-1">(</span><span class="mtk6">int</span> <span class="mtk10">i</span> <span class="mtk3">=</span> <span class="mtk7">0</span><span class="mtk1">;</span> <span class="mtk10">i</span> <span class="mtk3">&lt;</span> <span class="mtk7">4</span><span class="mtk1">;</span> <span class="mtk3">++</span><span class="mtk10">i</span><span class="bracket-highlighting-1">)</span> <span class="bracket-highlighting-1">{</span>',
                    '&tab2;<span class="mtk6">int</span> <span class="mtk10">nx</span> <span class="mtk3">=</span> <span class="mtk10">x</span> <span class="mtk3">+</span> <span class="mtk10">directions</span><span class="bracket-highlighting-2">[</span><span class="mtk10">i</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-2">[</span><span class="mtk7">0</span><span class="bracket-highlighting-2">]</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk6">int</span> <span class="mtk10">ny</span> <span class="mtk3">=</span> <span class="mtk10">y</span> <span class="mtk3">+</span> <span class="mtk10">directions</span><span class="bracket-highlighting-2">[</span><span class="mtk10">i</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-2">[</span><span class="mtk7">1</span><span class="bracket-highlighting-2">]</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk18">if</span> <span class="bracket-highlighting-2">(</span><span class="mtk10">nx</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">ny</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">nx</span> <span class="mtk3">&lt;</span> <span class="mtk10">rows</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">ny</span> <span class="mtk3">&lt;</span> <span class="mtk10">cols</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-3">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-3">]</span> <span class="mtk3">==</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk3">!</span><span class="mtk10">visited</span><span class="bracket-highlighting-3">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-2">)</span>',
                    '&tab3;<span class="mtk16">dfs</span><span class="bracket-highlighting-2">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk10">nx</span><span class="mtk1">,</span> <span class="mtk10">ny</span><span class="mtk1">,</span> <span class="mtk10">path</span><span class="mtk1">,</span> <span class="mtk10">visited</span><span class="mtk1">,</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span><span class="mtk1">,</span> <span class="mtk10">found</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="bracket-highlighting-1">}</span>',
                    '&tab1;<span class="mtk18">if</span> <span class="bracket-highlighting-1">(</span><span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">back</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">.</span><span class="mtk10">first</span> <span class="mtk3">!=</span> <span class="mtk10">endX</span> <span class="mtk3">||</span> <span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">back</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">.</span><span class="mtk10">second</span> <span class="mtk3">!=</span> <span class="mtk10">endY</span><span class="bracket-highlighting-1">)</span> <span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">pop_back</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">else</span> <span class="mtk10">found</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '<span class="bracket-highlighting-0">}</span>',
                    '<span>&empty-line;</span>',
                    '<span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">pair</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span> <span class="mtk16">findPath</span><span class="bracket-highlighting-0">(</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span><span class="mtk6">&amp;</span> <span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">startY</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endY</span><span class="bracket-highlighting-0">)</span> <span class="bracket-highlighting-0">{</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">rows</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">cols</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk6">bool</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">visited</span><span class="bracket-highlighting-1">(</span><span class="mtk10">rows</span><span class="mtk1">,</span> <span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">bool</span><span class="mtk1">&gt;</span><span class="bracket-highlighting-2">(</span><span class="mtk10">cols</span><span class="mtk1">,</span> <span class="mtk6">false</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">path</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">bool</span> <span class="mtk10">found</span> <span class="mtk3">=</span> <span class="mtk6">false</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk16">dfs</span><span class="bracket-highlighting-1">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span><span class="mtk1">,</span> <span class="mtk10">path</span><span class="mtk1">,</span> <span class="mtk10">visited</span><span class="mtk1">,</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span><span class="mtk1">,</span> <span class="mtk10">found</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">if</span> <span class="bracket-highlighting-0">(</span><span class="mtk10">found</span><span class="bracket-highlighting-0">)</span> <span class="mtk18">return</span> <span class="mtk10">path</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">return</span> <span class="bracket-highlighting-1">{</span><span class="bracket-highlighting-1">}</span><span class="mtk1">;</span>',
                    '<span class="bracket-highlighting-0">}</span>'
                ],
                usage: [
                    '<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">matrix</span> <span class="mtk3">=</span> <span class="bracket-highlighting-0">{</span><span class="bracket-highlighting-1">{</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">{</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">{</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="bracket-highlighting-0">}</span><span class="mtk1">;</span>',
                    '<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">result</span> <span class="mtk3">=</span> <span class="mtk16">findPath</span><span class="bracket-highlighting-0">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="bracket-highlighting-0">)</span><span class="mtk1">;</span>'
                ]
            },
            js: {
                main: [
                    '<span class="mtk6">function</span> <span class="mtk16">findPath</span><span class="bracket-highlighting-0">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span><span class="mtk1">,</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span><span class="bracket-highlighting-0">)</span> <span class="bracket-highlighting-0">{</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk16">dfs</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">(</span><span class="mtk10">x</span><span class="mtk1">,</span> <span class="mtk10">y</span><span class="bracket-highlighting-1">)</span> <span class="mtk6">=&gt;</span> <span class="bracket-highlighting-1">{</span>',
                    '&tab2;<span class="mtk18">if</span> <span class="bracket-highlighting-2">(</span><span class="mtk10">found</span><span class="bracket-highlighting-2">)</span> <span class="mtk18">return</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk19">visited</span><span class="bracket-highlighting-2">[</span><span class="mtk10">x</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-2">[</span><span class="mtk10">y</span><span class="bracket-highlighting-2">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk16">push</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-3">[</span><span class="mtk10">x</span><span class="mtk1">,</span> <span class="mtk10">y</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk18">for</span> <span class="bracket-highlighting-2">(</span><span class="mtk6">let</span> <span class="mtk10">i</span> <span class="mtk3">=</span> <span class="mtk7">0</span><span class="mtk1">;</span> <span class="mtk10">i</span> <span class="mtk3">&lt;</span> <span class="mtk7">4</span><span class="mtk1">;</span> <span class="mtk3">++</span><span class="mtk10">i</span><span class="bracket-highlighting-2">)</span> <span class="bracket-highlighting-2">{</span>',
                    '&tab3;<span class="mtk6">const</span> <span class="mtk19">nx</span> <span class="mtk3">=</span> <span class="mtk10">x</span> <span class="mtk3">+</span> <span class="mtk19">directions</span><span class="bracket-highlighting-3">[</span><span class="mtk10">i</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">0</span><span class="bracket-highlighting-3">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk6">const</span> <span class="mtk19">ny</span> <span class="mtk3">=</span> <span class="mtk10">y</span> <span class="mtk3">+</span> <span class="mtk19">directions</span><span class="bracket-highlighting-3">[</span><span class="mtk10">i</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">1</span><span class="bracket-highlighting-3">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">if</span> <span class="bracket-highlighting-3">(</span><span class="mtk19">nx</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">ny</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">nx</span> <span class="mtk3">&lt;</span> <span class="mtk19">rows</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">ny</span> <span class="mtk3">&lt;</span> <span class="mtk19">cols</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">==</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk3">!</span><span class="mtk19">visited</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-3">)</span>',
                    '&tab4;<span class="mtk16">dfs</span><span class="bracket-highlighting-3">(</span><span class="mtk19">nx</span><span class="mtk1">,</span> <span class="mtk19">ny</span><span class="bracket-highlighting-3">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="bracket-highlighting-2">}</span>',
                    '&tab2;<span class="mtk18">if</span> <span class="bracket-highlighting-2">(</span><span class="mtk19">path</span><span class="bracket-highlighting-3">[</span><span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk10">length</span> <span class="mtk3">-</span> <span class="mtk7">1</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">0</span><span class="bracket-highlighting-3">]</span> <span class="mtk3">!=</span> <span class="mtk10">endX</span> <span class="mtk3">||</span> <span class="mtk19">path</span><span class="bracket-highlighting-3">[</span><span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk10">length</span> <span class="mtk3">-</span> <span class="mtk7">1</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">1</span><span class="bracket-highlighting-3">]</span> <span class="mtk3">!=</span> <span class="mtk10">endY</span><span class="bracket-highlighting-2">)</span> <span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk16">pop</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk18">else</span> <span class="mtk10">found</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab1;<span class="bracket-highlighting-1">}</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">rows</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="mtk1">.</span><span class="mtk10">length</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">cols</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">.</span><span class="mtk10">length</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">visited</span> <span class="mtk3">=</span> <span class="mtk17">Array</span><span class="mtk1">.</span><span class="mtk16">from</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-2">{</span><span class="mtk10">length:</span> <span class="mtk19">rows</span><span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span> <span class="mtk6">=&gt;</span> <span class="mtk17">Array</span><span class="bracket-highlighting-2">(</span><span class="mtk19">cols</span><span class="bracket-highlighting-2">)</span><span class="mtk1">.</span><span class="mtk16">fill</span><span class="bracket-highlighting-2">(</span><span class="mtk6">false</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">path</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">directions</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-2">[</span><span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">let</span> <span class="mtk10">found</span> <span class="mtk3">=</span> <span class="mtk6">false</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk16">dfs</span><span class="bracket-highlighting-1">(</span><span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">if</span> <span class="bracket-highlighting-1">(</span><span class="mtk10">found</span><span class="bracket-highlighting-1">)</span> <span class="mtk18">return</span> <span class="mtk19">path</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">return</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '<span class="bracket-highlighting-0">}</span>'
                ],
                usage: [
                    '<span class="mtk6">const</span> <span class="mtk19">matrix</span> <span class="mtk3">=</span> <span class="bracket-highlighting-0">[</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">[</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-0">]</span><span class="mtk1">;</span>',
                    '<span class="mtk6">const</span> <span class="mtk19">result</span> <span class="mtk3">=</span> <span class="mtk16">findPath</span><span class="bracket-highlighting-0">(</span><span class="mtk19">matrix</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="bracket-highlighting-0">)</span><span class="mtk1">;</span>'
                ]
            }
        },
        bfs: {
            cpp: {
                main: [
                    '<span class="mtk5">// include: vector, queue, algorithm</span>',
                    '<span class="mtk5">// namespace: std</span>',
                    '<span>&empty-line;</span>',
                    '<span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">pair</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span> <span class="mtk16">bfs</span><span class="bracket-highlighting-0">(</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span><span class="mtk6">&amp;</span> <span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">startY</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk6">int</span> <span class="mtk10">endY</span><span class="bracket-highlighting-0">)</span> <span class="bracket-highlighting-0">{</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">rows</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">cols</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">.</span><span class="mtk16">size</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk6">bool</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">visited</span><span class="bracket-highlighting-1">(</span><span class="mtk10">rows</span><span class="mtk1">,</span> <span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk6">bool</span><span class="mtk1">&gt;</span><span class="bracket-highlighting-2">(</span><span class="mtk10">cols</span><span class="mtk1">,</span> <span class="mtk6">false</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;&gt;</span> <span class="mtk10">cameFrom</span><span class="bracket-highlighting-1">(</span><span class="mtk10">rows</span><span class="mtk1">,</span> <span class="mtk17">vector</span><span class="mtk1">&lt;</span><span class="mtk17">pair</span><span class="mtk1">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk1">&gt;&gt;</span><span class="bracket-highlighting-2">(</span><span class="mtk10">cols</span><span class="mtk1">,</span> <span class="bracket-highlighting-3">{</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk3">-</span><span class="mtk7">1</span> <span class="bracket-highlighting-3">}</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk17">queue</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">q</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk10">q</span><span class="mtk1">.</span><span class="mtk16">push</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-2">{</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span> <span class="bracket-highlighting-2">}</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk10">visited</span><span class="bracket-highlighting-1">[</span><span class="mtk10">startX</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-1">[</span><span class="mtk10">startY</span><span class="bracket-highlighting-1">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">int</span> <span class="mtk10">directions</span><span class="bracket-highlighting-1">[</span><span class="mtk7">4</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-1">[</span><span class="mtk7">2</span><span class="bracket-highlighting-1">]</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">{</span> <span class="bracket-highlighting-2">{</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk3">-</span><span class="mtk7">1</span> <span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">{</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">1</span> <span class="bracket-highlighting-2">}</span> <span class="bracket-highlighting-1">}</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">while</span> <span class="bracket-highlighting-1">(</span><span class="mtk3">!</span><span class="mtk10">q</span><span class="mtk1">.</span><span class="mtk16">empty</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span> <span class="bracket-highlighting-1">{</span>',
                    '&tab2;<span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;</span> <span class="mtk10">current</span> <span class="mtk3">=</span> <span class="mtk10">q</span><span class="mtk1">.</span><span class="mtk16">front</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk10">q</span><span class="mtk1">.</span><span class="mtk16">pop</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk6">int</span> <span class="mtk10">x</span> <span class="mtk3">=</span> <span class="mtk10">current</span><span class="mtk1">.</span><span class="mtk10">first</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk6">int</span> <span class="mtk10">y</span> <span class="mtk3">=</span> <span class="mtk10">current</span><span class="mtk1">.</span><span class="mtk10">second</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk18">if</span> <span class="bracket-highlighting-2">(</span><span class="mtk10">x</span> <span class="mtk3">==</span> <span class="mtk10">endX</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">y</span> <span class="mtk3">==</span> <span class="mtk10">endY</span><span class="bracket-highlighting-2">)</span> <span class="bracket-highlighting-2">{</span>',
                    '&tab3;<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">path</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">for</span> <span class="bracket-highlighting-3">(</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;</span> <span class="mtk10">at</span> <span class="mtk3">=</span> <span class="bracket-highlighting-4">{</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span> <span class="bracket-highlighting-4">}</span><span class="mtk1">;</span> <span class="mtk10">at</span><span class="mtk1">.</span><span class="mtk10">first</span> <span class="mtk3">!=</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">;</span> <span class="mtk10">at</span> <span class="mtk3">=</span> <span class="mtk10">cameFrom</span><span class="bracket-highlighting-4">[</span><span class="mtk10">at</span><span class="mtk1">.</span><span class="mtk10">first</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">at</span><span class="mtk1">.</span><span class="mtk10">second</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-3">)</span>',
                    '&tab4;<span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">push_back</span><span class="bracket-highlighting-3">(</span><span class="mtk10">at</span><span class="bracket-highlighting-3">)</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk16">reverse</span><span class="bracket-highlighting-3">(</span><span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">begin</span><span class="bracket-highlighting-4">(</span><span class="bracket-highlighting-4">)</span><span class="mtk1">,</span> <span class="mtk10">path</span><span class="mtk1">.</span><span class="mtk16">end</span><span class="bracket-highlighting-4">(</span><span class="bracket-highlighting-4">)</span><span class="bracket-highlighting-3">)</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">return</span> <span class="mtk10">path</span><span class="mtk1">;</span>',
                    '&tab2;<span class="bracket-highlighting-2">}</span>',
                    '&tab2;<span class="mtk18">for</span> <span class="bracket-highlighting-2">(</span><span class="mtk6">int</span> <span class="mtk10">i</span> <span class="mtk3">=</span> <span class="mtk7">0</span><span class="mtk1">;</span> <span class="mtk10">i</span> <span class="mtk3">&lt;</span> <span class="mtk7">4</span><span class="mtk1">;</span> <span class="mtk3">++</span><span class="mtk10">i</span><span class="bracket-highlighting-2">)</span> <span class="bracket-highlighting-2">{</span>',
                    '&tab3;<span class="mtk6">int</span> <span class="mtk10">nx</span> <span class="mtk3">=</span> <span class="mtk10">x</span> <span class="mtk3">+</span> <span class="mtk10">directions</span><span class="bracket-highlighting-3">[</span><span class="mtk10">i</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">0</span><span class="bracket-highlighting-3">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk6">int</span> <span class="mtk10">ny</span> <span class="mtk3">=</span> <span class="mtk10">y</span> <span class="mtk3">+</span> <span class="mtk10">directions</span><span class="bracket-highlighting-3">[</span><span class="mtk10">i</span><span class="bracket-highlighting-3">]</span><span class="bracket-highlighting-3">[</span><span class="mtk7">1</span><span class="bracket-highlighting-3">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">if</span> <span class="bracket-highlighting-3">(</span><span class="mtk10">nx</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">nx</span> <span class="mtk3">&lt;</span> <span class="mtk10">rows</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">ny</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">ny</span> <span class="mtk3">&lt;</span> <span class="mtk10">cols</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-4">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">==</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk3">!</span><span class="mtk10">visited</span><span class="bracket-highlighting-4">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-3">)</span> <span class="bracket-highlighting-3">{</span>',
                    '&tab4;<span class="mtk10">q</span><span class="mtk1">.</span><span class="mtk16">push</span><span class="bracket-highlighting-4">(</span><span class="bracket-highlighting-5">{</span> <span class="mtk10">nx</span><span class="mtk1">,</span> <span class="mtk10">ny</span> <span class="bracket-highlighting-5">}</span><span class="bracket-highlighting-4">)</span><span class="mtk1">;</span>',
                    '&tab4;<span class="mtk10">visited</span><span class="bracket-highlighting-4">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab4;<span class="mtk10">cameFrom</span><span class="bracket-highlighting-4">[</span><span class="mtk10">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">=</span> <span class="bracket-highlighting-4">{</span> <span class="mtk10">x</span><span class="mtk1">,</span> <span class="mtk10">y</span> <span class="bracket-highlighting-4">}</span><span class="mtk1">;</span>',
                    '&tab3;<span class="bracket-highlighting-3">}</span>',
                    '&tab2;<span class="bracket-highlighting-2">}</span>',
                    '&tab1;<span class="bracket-highlighting-1">}</span>',
                    '&tab1;<span class="mtk18">return</span> <span class="bracket-highlighting-1">{</span><span class="bracket-highlighting-1">}</span><span class="mtk1">;</span>',
                    '<span class="bracket-highlighting-0">}</span>'
                ],
                usage: [
                    '<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">matrix</span> <span class="mtk3">=</span> <span class="bracket-highlighting-0">{</span><span class="bracket-highlighting-1">{</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">{</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">{</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">}</span><span class="bracket-highlighting-0">}</span><span class="mtk1">;</span>',
                    '<span class="mtk17">vector</span><span class="mtk3">&lt;</span><span class="mtk17">pair</span><span class="mtk3">&lt;</span><span class="mtk6">int</span><span class="mtk1">,</span> <span class="mtk6">int</span><span class="mtk3">&gt;&gt;</span> <span class="mtk10">result</span> <span class="mtk3">=</span> <span class="mtk16">bfs</span><span class="bracket-highlighting-0">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="bracket-highlighting-0">)</span><span class="mtk1">;</span>'
                ]
            },
            js: {
                main: [
                    '<span class="mtk6">function</span> <span class="mtk16">bfs</span><span class="bracket-highlighting-0">(</span><span class="mtk10">matrix</span><span class="mtk1">,</span> <span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span><span class="mtk1">,</span> <span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span><span class="bracket-highlighting-0">)</span> <span class="bracket-highlighting-0">{</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">rows</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="mtk1">.</span><span class="mtk10">length</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">cols</span> <span class="mtk3">=</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">.</span><span class="mtk10">length</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">visited</span> <span class="mtk3">=</span> <span class="mtk17">Array</span><span class="mtk1">.</span><span class="mtk16">from</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-2">{</span><span class="mtk10">length:</span> <span class="mtk19">rows</span><span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span> <span class="mtk6">=&gt;</span> <span class="mtk17">Array</span><span class="bracket-highlighting-2">(</span><span class="mtk19">cols</span><span class="bracket-highlighting-2">)</span><span class="mtk1">.</span><span class="mtk16">fill</span><span class="bracket-highlighting-2">(</span><span class="mtk6">false</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">cameFrom</span> <span class="mtk3">=</span> <span class="mtk17">Array</span><span class="mtk1">.</span><span class="mtk16">from</span><span class="bracket-highlighting-1">(</span><span class="bracket-highlighting-2">{</span><span class="mtk10">length:</span> <span class="mtk19">rows</span><span class="bracket-highlighting-2">}</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span> <span class="mtk6">=&gt;</span> <span class="mtk17">Array</span><span class="bracket-highlighting-2">(</span><span class="mtk19">cols</span><span class="bracket-highlighting-2">)</span><span class="mtk1">.</span><span class="mtk16">fill</span><span class="bracket-highlighting-2">(</span><span class="mtk6">null</span><span class="bracket-highlighting-2">)</span><span class="bracket-highlighting-1">)</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">queue</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-2">[</span><span class="mtk10">startX</span><span class="mtk1">,</span> <span class="mtk10">startY</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk19">visited</span><span class="bracket-highlighting-1">[</span><span class="mtk10">startX</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-1">[</span><span class="mtk10">startY</span><span class="bracket-highlighting-1">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk6">const</span> <span class="mtk19">directions</span> <span class="mtk3">=</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-2">[</span><span class="mtk3">-</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk3">-</span><span class="mtk7">1</span><span class="bracket-highlighting-2">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-2">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="bracket-highlighting-2">]</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '&tab1;<span class="mtk18">while</span> <span class="bracket-highlighting-1">(</span><span class="mtk19">queue</span><span class="mtk1">.</span><span class="mtk10">length</span> <span class="mtk3">&gt;</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">)</span> <span class="bracket-highlighting-1">{</span>',
                    '&tab2;<span class="mtk6">const</span> <span class="bracket-highlighting-2">[</span><span class="mtk19">x</span><span class="mtk1">,</span> <span class="mtk19">y</span><span class="bracket-highlighting-2">]</span> <span class="mtk3">=</span> <span class="mtk19">queue</span><span class="mtk1">.</span><span class="mtk16">shift</span><span class="bracket-highlighting-2">(</span><span class="bracket-highlighting-2">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="mtk18">if</span> <span class="bracket-highlighting-2">(</span><span class="mtk19">x</span> <span class="mtk3">==</span> <span class="mtk10">endX</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">y</span> <span class="mtk3">==</span> <span class="mtk10">endY</span><span class="bracket-highlighting-2">)</span> <span class="bracket-highlighting-2">{</span>',
                    '&tab3;<span class="mtk6">const</span> <span class="mtk19">path</span> <span class="mtk3">=</span> <span class="bracket-highlighting-3">[</span><span class="bracket-highlighting-3">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">for</span> <span class="bracket-highlighting-3">(</span><span class="mtk6">let</span> <span class="mtk10">at</span> <span class="mtk3">=</span> <span class="bracket-highlighting-4">[</span><span class="mtk10">endX</span><span class="mtk1">,</span> <span class="mtk10">endY</span><span class="bracket-highlighting-4">]</span><span class="mtk1">;</span> <span class="mtk10">at</span><span class="mtk1">;</span> <span class="mtk10">at</span> <span class="mtk3">=</span> <span class="mtk19">cameFrom</span><span class="bracket-highlighting-4">[</span><span class="mtk10">at</span><span class="bracket-highlighting-5">[</span><span class="mtk7">0</span><span class="bracket-highlighting-5">]</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk10">at</span><span class="bracket-highlighting-5">[</span><span class="mtk7">1</span><span class="bracket-highlighting-5">]</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-3">)</span>',
                    '&tab4;<span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk16">push</span><span class="bracket-highlighting-3">(</span><span class="mtk10">at</span><span class="bracket-highlighting-3">)</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">return</span> <span class="mtk19">path</span><span class="mtk1">.</span><span class="mtk16">reverse</span><span class="bracket-highlighting-3">(</span><span class="bracket-highlighting-3">)</span><span class="mtk1">;</span>',
                    '&tab2;<span class="bracket-highlighting-2">}</span>',
                    '&tab2;<span class="mtk18">for</span> <span class="bracket-highlighting-2">(</span><span class="mtk6">const</span> <span class="bracket-highlighting-3">[</span><span class="mtk19">dx</span><span class="mtk1">,</span> <span class="mtk19">dy</span><span class="bracket-highlighting-3">]</span> <span class="mtk6">of</span> <span class="mtk19">directions</span><span class="bracket-highlighting-2">)</span> <span class="bracket-highlighting-2">{</span>',
                    '&tab3;<span class="mtk6">const</span> <span class="mtk19">nx</span> <span class="mtk3">=</span> <span class="mtk19">x</span> <span class="mtk3">+</span> <span class="mtk19">dx</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk6">const</span> <span class="mtk19">ny</span> <span class="mtk3">=</span> <span class="mtk19">y</span> <span class="mtk3">+</span> <span class="mtk19">dy</span><span class="mtk1">;</span>',
                    '&tab3;<span class="mtk18">if</span> <span class="bracket-highlighting-3">(</span><span class="mtk19">nx</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">nx</span> <span class="mtk3">&lt;</span> <span class="mtk19">rows</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">ny</span> <span class="mtk3">&gt;=</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk19">ny</span> <span class="mtk3">&lt;</span> <span class="mtk19">cols</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk10">matrix</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">==</span> <span class="mtk7">0</span> <span class="mtk3">&amp;&amp;</span> <span class="mtk3">!</span><span class="mtk19">visited</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-3">)</span> <span class="bracket-highlighting-3">{</span>',
                    '&tab4;<span class="mtk19">queue</span><span class="mtk1">.</span><span class="mtk16">push</span><span class="bracket-highlighting-4">(</span><span class="bracket-highlighting-5">[</span><span class="mtk19">nx</span><span class="mtk1">,</span> <span class="mtk19">ny</span><span class="bracket-highlighting-5">]</span><span class="bracket-highlighting-4">)</span><span class="mtk1">;</span>',
                    '&tab4;<span class="mtk19">visited</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">=</span> <span class="mtk6">true</span><span class="mtk1">;</span>',
                    '&tab4;<span class="mtk19">cameFrom</span><span class="bracket-highlighting-4">[</span><span class="mtk19">nx</span><span class="bracket-highlighting-4">]</span><span class="bracket-highlighting-4">[</span><span class="mtk19">ny</span><span class="bracket-highlighting-4">]</span> <span class="mtk3">=</span> <span class="bracket-highlighting-4">[</span><span class="mtk19">x</span><span class="mtk1">,</span> <span class="mtk19">y</span><span class="bracket-highlighting-4">]</span><span class="mtk1">;</span>',
                    '&tab3;<span class="bracket-highlighting-3">}</span>',
                    '&tab2;<span class="bracket-highlighting-2">}</span>',
                    '&tab1;<span class="bracket-highlighting-1">}</span>',
                    '&tab1;<span class="mtk18">return</span> <span class="bracket-highlighting-1">[</span><span class="bracket-highlighting-1">]</span><span class="mtk1">;</span>',
                    '<span class="bracket-highlighting-0">}</span>'
                ],
                usage: [
                    '<span class="mtk6">const</span> <span class="mtk19">matrix</span> <span class="mtk3">=</span> <span class="bracket-highlighting-0">[</span><span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">[</span><span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="mtk1">,</span> <span class="bracket-highlighting-1">[</span><span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">1</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="bracket-highlighting-1">]</span><span class="bracket-highlighting-0">]</span><span class="mtk1">;</span>',
                    '<span class="mtk6">const</span> <span class="mtk19">result</span> <span class="mtk3">=</span> <span class="mtk16">bfs</span><span class="bracket-highlighting-0">(</span><span class="mtk19">matrix</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">0</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="mtk1">,</span> <span class="mtk7">2</span><span class="bracket-highlighting-0">)</span><span class="mtk1">;</span>'
                ]
            }
        }
    },
    complexitys: {
        bfs: {
            average: 'V + E',
            best: 'V + E',
            worst: 'V + E',
            space: 'V'
        },
        dfs: {
            average: 'V + E',
            best: 'V + E',
            worst: 'V + E',
            space: 'V'
        }
    },
    commentCodes: {
        bfs: 'mtk16|bfs',
        dfs: 'mtk16|dfs',
        x: 'mtk10|x',
        y: 'mtk10|y',
        xjs: 'mtk19|x',
        yjs: 'mtk19|y',
        findPath: 'mtk16|findPath',
        vector: 'mtk17|vector',
        stackjs: 'mtk19|stack',
        '(x,y)1': ['(1', 'mtk10|x', ',', ' ', 'mtk10|y', ')1'],
        '(x,y)2': ['(2', 'mtk10|x', ',', ' ', 'mtk10|y', ')2'],
        '(x,y)3': ['(3', 'mtk10|x', ',', ' ', 'mtk10|y', ')3']
    }
});

await fs.writeFileSync('./source/data/pages/pathfinding.a.json', data);

console.log('Done!');
